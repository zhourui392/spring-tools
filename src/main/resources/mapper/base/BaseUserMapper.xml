<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.zz.user.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.zz.user.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="showName" property="showName" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="createdtime" property="createdtime" jdbcType="TIMESTAMP" />
    <result column="updatedtime" property="updatedtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, showName, username, password, status, createdtime, updatedtime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.zz.user.entity.User" >
    insert into t_user (id, showName, username,
    password, status, createdtime,
    updatedtime)
    values (#{id,jdbcType=INTEGER}, #{showName,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
    #{password,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{createdtime,jdbcType=TIMESTAMP},
    #{updatedtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.zz.user.entity.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="showName != null" >
        showName,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createdtime != null" >
        createdtime,
      </if>
      <if test="updatedtime != null" >
        updatedtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="showName != null" >
        #{showName,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedtime != null" >
        #{updatedtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zz.user.entity.User" >
    update t_user
    <set >
      <if test="showName != null" >
        showName = #{showName,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createdtime != null" >
        createdtime = #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedtime != null" >
        updatedtime = #{updatedtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zz.user.entity.User" >
    update t_user
    set showName = #{showName,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      createdtime = #{createdtime,jdbcType=TIMESTAMP},
      updatedtime = #{updatedtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>